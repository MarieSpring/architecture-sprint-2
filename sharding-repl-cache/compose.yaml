name: sharding-repl-cache

services:

  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - redis2
      - mongos_router
    restart: always
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router"
      MONGODB_DATABASE_NAME: "somedb"
      REDIS_URL: "redis://redis2:6379"

  redis1:
    container_name: redis1
    image: redis:latest
    restart: always
    volumes:
      - redis1-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      app-network:
        ipv4_address: 173.17.0.2

  redis2:
    container_name: redis2
    image: redis:latest
    restart: always
    volumes:
      - redis2-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      app-network:
        ipv4_address: 173.17.0.3

  redis3:
    container_name: redis3
    image: redis:latest
    restart: always
    volumes:
      - redis3-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      app-network:
        ipv4_address: 173.17.0.4

  redis4:
    container_name: redis4
    image: redis:latest
    restart: always
    volumes:
      - redis4-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      app-network:
        ipv4_address: 173.17.0.5

  redis5:
    container_name: redis5
    image: redis:latest
    restart: always
    volumes:
      - redis5-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      app-network:
        ipv4_address: 173.17.0.6

  redis6:
    container_name: redis6
    image: redis:latest
    restart: always
    volumes:
      - redis6-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      app-network:
        ipv4_address: 173.17.0.7

  mongos_router:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: mongos_router
    depends_on: ["configSrv", "shard11", "shard12", "shard13", "shard21", "shard22", "shard23"]
    restart: always
    ports:
      - 27017:27017
    volumes:
      - router-data:/data/db
    command:
      [
        "mongos", 
        "--configdb", 
        "config_server/configSrv:27019", 
        "--bind_ip_all"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  configSrv:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: configSrv 
    restart: always
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",  
        "--replSet",
        "config_server",
        "--bind_ip_all"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')", "--port", "27019" ]
      interval: 5s
      start_period: 10s

  shard11:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard11
    restart: always
    volumes:
      - shard11-data:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard1", 
        "--bind_ip_all"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')", "--port", "27018" ]
      interval: 5s
      start_period: 10s

  shard12:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard12
    restart: always
    volumes:
      - shard12-data:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard1", 
        "--bind_ip_all"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')", "--port", "27018" ]
      interval: 5s
      start_period: 10s

  shard13:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard13
    restart: always
    volumes:
      - shard13-data:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard1", 
        "--bind_ip_all"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')", "--port", "27018" ]
      interval: 5s
      start_period: 10s

  shard21:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard21
    restart: always
    volumes:
      - shard21-data:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard2", 
        "--bind_ip_all"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')", "--port", "27018" ]
      interval: 5s
      start_period: 10s

  shard22:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard22
    restart: always
    volumes:
      - shard22-data:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard2", 
        "--bind_ip_all"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')", "--port", "27018" ]
      interval: 5s
      start_period: 10s

  shard23:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard23
    restart: always
    volumes:
      - shard23-data:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard2", 
        "--bind_ip_all"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')", "--port", "27018" ]
      interval: 5s
      start_period: 10s

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  redis1-data: { }
  redis2-data: { }
  redis3-data: { }
  redis4-data: { }
  redis5-data: { }
  redis6-data: { }
  router-data:
  config-data:
  shard11-data:
  shard12-data:
  shard13-data:
  shard21-data:
  shard22-data:
  shard23-data: